タイトル
	JavaScriptで作るドラクエ風コマンドラインバトル

作成日
	2020年8月

ジャンル
	コマンドライン式の戦闘

設計
	イメージ
		ポンチ絵からはじめましょう。

		主人公はひとり
				HP     80
				攻撃力 25
				素早さ 12
				薬草   3

		敵はふたり
			ガーゴイル
				HP     50
				攻撃力 6
				素早さ 20

			ドラゴン
				HP     100
				攻撃力 30
				素早さ 5

	ロジック
		日本語で書きます。
		実装できそうだと思えるところまで
		分割していきます。
		自分自身で、分割する作業をやってみたいと思うかもしれません。
		しかし、分割する作業ははじめのうちは、なかなか難しいです。
		プログラミング言語でどのようなことができて、
		その実現にはどのようなコードを書けばいいかが、
		ある程度わかっていないと、難しいと思います。
		プログラミング言語を学習して力がついてきたら
		分割して流れをつくる作業は、フローチャートをつくったりするよりも簡単です

		コーヒーブレイク
			完成形ですが、1から作る場合、完璧には書けませんでした。
			ある程度まで書いてから、実装して、修正していけばいいのかなと思います。
			一発で設計書を作って、その通りに実装して問題なく動作して完成！ということは
			実際の現場でもほとんどありません。
			多くの場合は、手戻りという作業が発生します。
			手戻りというのは、実装してみたら問題が発生したから設計を見直したりすることです。

		はじめから

		1
			ゲーム

		2
			ゲーム開始のメッセージ
			繰り返し
				ターンの順番を素早さで決定
					味方のターン
						コマンドの入力を待つ
							攻撃
								対象を選択
									対象のHPを減らす
										敵を倒したか判定
											敵全滅か判定
												エンディング
							回復
								自分のHPを上昇
					敵のターン
						攻撃
							自分のHPを減少
							自分が死んだ？


			メモ
				行動の順番は素早さの順番
				敵の行動で攻撃か回復はランダム


	実装するもの
		データ
			開始メッセージ
				村から消えた『光のペンダント』を探して
				主人公は、連なる山を越え、深い谷をかいくぐり
				大きなのほこらへとたどり着いた。
				恐る恐る、暗いほこらの奥へと進んでいくと
				目の前に大きなドラゴンが現れた！
			終了メッセージ
				ガーゴイルとドラゴンは
				「負けました、命だけは許してください、これ、返しますから・・・」といって
				光のペンダントを主人公の手のひらに乗せた。
				主人公は、お前たちが盗んだんだな、許してやっから、さっさと帰んな」といって
				ドラゴンのお尻を蹴った。
				ドラゴンとガーゴイルは、そそくさとほこらの奥へと帰っていった。
				主人公は「これでやっと村が元通りになるぜい！」といって
				急ぎ足で村へと向かうのだった。
				fin.


		メソッド
			行動の順番を決める

		クラス
			主人公
				プロパティ
					名前
					HP
					攻撃力
					素早さ
					薬草
				メソッド
					攻撃する
					回復する

			ガーゴイル
				プロパティ
					名前
					HP
					攻撃力
					素早さ
				メソッド
					攻撃する

			ドラゴン
				プロパティ
					名前
					HP
					攻撃力
					素早さ
				メソッド
					攻撃する

		ディレクトリ構成
			index.html
			css/
			js/
			image/主人公.png
			      ガーゴイル.png
			      ドラゴン.png

	依存関係の整理
		


	実装
		1
			主人公クラス
			ガーゴイルクラス

		2
			引数でパラメータを設定する


		3
			継承
				共通部分を抜き出す
				親クラスを利用して、ドラゴンクラスをつくる



		オブジェクトの生成







